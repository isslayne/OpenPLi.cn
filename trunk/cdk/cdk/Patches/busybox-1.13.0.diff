diff -Naur busybox-1.13.0/Config.in busybox-1.13.0/Config.in
--- busybox-1.13.0/Config.in	2008-11-07 00:40:39.000000000 +0100
+++ busybox-1.13.0/Config.in	2008-11-16 18:55:32.000000000 +0100
@@ -269,6 +269,14 @@
 	#  This is automatically selected if any of enabled applets need it.
 	#  You do not need to select it manually.
 
+config AUTH_IN_VAR_ETC
+       bool "Search auth files in /var/etc"
+       default y
+       help
+         passwd, shadow, group, gshadow, and nologin will be searched in
+         /var/etc instead of /etc. This is usefull, if /etc is not
+         writeable (flash). 
+
 endmenu
 
 menu 'Build Options'
diff -Naur busybox-1.13.0/include/applets.h busybox-1.13.0/include/applets.h
--- busybox-1.13.0/include/applets.h	2008-11-07 00:40:39.000000000 +0100
+++ busybox-1.13.0/include/applets.h	2008-11-16 18:56:52.000000000 +0100
@@ -188,7 +188,6 @@
 USE_IFUPDOWN(APPLET_ODDNAME(ifup, ifupdown, _BB_DIR_SBIN, _BB_SUID_NEVER, ifup))
 USE_INETD(APPLET(inetd, _BB_DIR_USR_SBIN, _BB_SUID_NEVER))
 USE_INIT(APPLET(init, _BB_DIR_SBIN, _BB_SUID_NEVER))
-USE_INOTIFYD(APPLET(inotifyd, _BB_DIR_SBIN, _BB_SUID_NEVER))
 USE_INSMOD(APPLET(insmod, _BB_DIR_SBIN, _BB_SUID_NEVER))
 USE_MODPROBE_SMALL(APPLET_ODDNAME(insmod, modprobe, _BB_DIR_SBIN, _BB_SUID_NEVER, modprobe))
 USE_INSTALL(APPLET(install, _BB_DIR_USR_BIN, _BB_SUID_NEVER))
@@ -358,7 +357,6 @@
 USE_TAC(APPLET_NOEXEC(tac, tac, _BB_DIR_USR_BIN, _BB_SUID_NEVER, tac))
 USE_TAIL(APPLET(tail, _BB_DIR_USR_BIN, _BB_SUID_NEVER))
 USE_TAR(APPLET(tar, _BB_DIR_BIN, _BB_SUID_NEVER))
-USE_TASKSET(APPLET(taskset, _BB_DIR_USR_BIN, _BB_SUID_NEVER))
 /* USE_TC(APPLET(tc, _BB_DIR_SBIN, _BB_SUID_NEVER)) */
 USE_TCPSVD(APPLET_ODDNAME(tcpsvd, tcpudpsvd, _BB_DIR_USR_BIN, _BB_SUID_NEVER, tcpsvd))
 USE_TEE(APPLET(tee, _BB_DIR_USR_BIN, _BB_SUID_NEVER))
diff -Naur busybox-1.13.0/libbb/messages.c busybox-1.13.0/libbb/messages.c
--- busybox-1.13.0/libbb/messages.c	2008-10-30 08:41:34.000000000 +0100
+++ busybox-1.13.0/libbb/messages.c	2008-11-16 18:58:24.000000000 +0100
@@ -36,11 +36,17 @@
 
 const char bb_str_default[] ALIGN1 = "default";
 const char bb_hexdigits_upcase[] ALIGN1 = "0123456789ABCDEF";
-
+#ifdef CONFIG_AUTH_IN_VAR_ETC
+const char bb_path_passwd_file[] ALIGN1 = "/var/etc/passwd";
+const char bb_path_shadow_file[] ALIGN1 = "/var/etc/shadow";
+const char bb_path_group_file[] ALIGN1 = "/var/etc/group";
+const char bb_path_gshadow_file[] ALIGN1 = "/var/etc/gshadow";
+#else
 const char bb_path_passwd_file[] ALIGN1 = "/etc/passwd";
 const char bb_path_shadow_file[] ALIGN1 = "/etc/shadow";
 const char bb_path_group_file[] ALIGN1 = "/etc/group";
 const char bb_path_gshadow_file[] ALIGN1 = "/etc/gshadow";
+#endif
 const char bb_path_motd_file[] ALIGN1 = "/etc/motd";
 const char bb_dev_null[] ALIGN1 = "/dev/null";
 const char bb_busybox_exec_path[] ALIGN1 = CONFIG_BUSYBOX_EXEC_PATH;
diff -Naur busybox-1.13.0/miscutils/Config.in busybox-1.13.0/miscutils/Config.in
--- busybox-1.13.0/miscutils/Config.in	2008-11-06 01:49:19.000000000 +0100
+++ busybox-1.13.0/miscutils/Config.in	2008-11-16 18:59:55.000000000 +0100
@@ -238,13 +238,6 @@
 	    "NN" (ASCII decimal number) - percentage to show on progress bar
 	    "exit" - well you guessed it
 
-config INOTIFYD
-	bool "inotifyd"
-	default n
-	help
-	  Simple inotify daemon. Reports filesystem changes. Requires
-	  kernel >= 2.6.13
-
 config LAST
 	bool "last"
 	default n
@@ -505,22 +498,6 @@
 	  strings prints the printable character sequences for each file
 	  specified.
 
-config TASKSET
-	bool "taskset"
-	default n
-	help
-	  Retrieve or set a processes's CPU affinity.
-	  This requires sched_{g,s}etaffinity support in your libc.
-
-config FEATURE_TASKSET_FANCY
-	bool "Fancy output"
-	default y
-	depends on TASKSET
-	help
-	  Add code for fancy output. This merely silences a compiler-warning
-	  and adds about 135 Bytes. May be needed for machines with alot
-	  of CPUs.
-
 config TIME
 	bool "time"
 	default n
diff -Naur busybox-1.13.0/miscutils/inotifyd.c busybox-1.13.0/miscutils/inotifyd.c
--- busybox-1.13.0/miscutils/inotifyd.c	2008-10-30 08:41:37.000000000 +0100
+++ busybox-1.13.0/miscutils/inotifyd.c	2008-11-16 19:02:04.000000000 +0100
@@ -45,9 +45,6 @@
 	"M"	// 0x00000800	Self was moved
 ;
 
-extern int inotify_init(void);
-extern int inotify_add_watch(int fd, const char *path, uint32_t mask);
-
 int inotifyd_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int inotifyd_main(int argc UNUSED_PARAM, char **argv)
 {
@@ -60,11 +57,6 @@
 	if (!argv[1])
 		bb_show_usage();
 
-	// open inotify
-	pfd.fd = inotify_init();
-	if (pfd.fd < 0)
-		bb_perror_msg_and_die("no kernel support");
-
 	// setup watched
 	while (*++argv) {
 		char *path = *argv;
@@ -82,12 +74,6 @@
 				}
 			}
 		}
-		// add watch
-		wd = inotify_add_watch(pfd.fd, path, mask);
-		if (wd < 0) {
-			bb_perror_msg_and_die("add watch (%s) failed", path);
-//		} else {
-//			bb_error_msg("added %d [%s]:%4X", wd, path, mask);
 		}
 	}
 
diff -Naur busybox-1.13.0/miscutils/Kbuild busybox-1.13.0/miscutils/Kbuild
--- busybox-1.13.0/miscutils/Kbuild	2008-10-30 08:41:37.000000000 +0100
+++ busybox-1.13.0/miscutils/Kbuild	2008-11-16 19:02:37.000000000 +0100
@@ -17,7 +17,6 @@
 lib-$(CONFIG_EJECT)       += eject.o
 lib-$(CONFIG_FBSPLASH)    += fbsplash.o
 lib-$(CONFIG_HDPARM)      += hdparm.o
-lib-$(CONFIG_INOTIFYD)    += inotifyd.o
 lib-$(CONFIG_FEATURE_LAST_SMALL)+= last.o
 lib-$(CONFIG_FEATURE_LAST_FANCY)+= last_fancy.o
 lib-$(CONFIG_LESS)        += less.o
@@ -32,7 +31,6 @@
 lib-$(CONFIG_RX)          += rx.o
 lib-$(CONFIG_SETSID)      += setsid.o
 lib-$(CONFIG_STRINGS)     += strings.o
-lib-$(CONFIG_TASKSET)     += taskset.o
 lib-$(CONFIG_TIME)        += time.o
 lib-$(CONFIG_TTYSIZE)     += ttysize.o
 lib-$(CONFIG_WATCHDOG)    += watchdog.o
diff -Naur busybox-1.13.0/miscutils/taskset.c busybox-1.13.0/miscutils/taskset.c
--- busybox-1.13.0/miscutils/taskset.c	2008-10-30 08:41:37.000000000 +0100
+++ busybox-1.13.0/miscutils/taskset.c	2008-11-16 19:04:04.000000000 +0100
@@ -97,7 +97,7 @@
 	current_new = "current\0new";
 	if (opt_p) {
  print_aff:
-		if (sched_getaffinity(pid, sizeof(mask), &mask) < 0)
+		if (sched_getaffinity(pid, sizeof(mask)) < 0)
 			bb_perror_msg_and_die("can't %cet pid %d's affinity", 'g', pid);
 		printf("pid %d's %s affinity mask: "TASKSET_PRINTF_MASK"\n",
 				pid, current_new, from_cpuset(&mask));
@@ -125,10 +125,6 @@
 		}
 	}
 
-	/* Set pid's or our own (pid==0) affinity */
-	if (sched_setaffinity(pid, sizeof(mask), &mask))
-		bb_perror_msg_and_die("can't %cet pid %d's affinity", 's', pid);
-
 	if (!*argv) /* "-p <aff> <pid> [...ignored...]" */
 		goto print_aff; /* print new affinity and exit */
 
diff -Naur busybox-1.13.0/networking/ifupdown.c busybox-1.13.0/networking/ifupdown.c
--- busybox-1.13.0/networking/ifupdown.c	2008-11-01 01:07:51.000000000 +0100
+++ busybox-1.13.0/networking/ifupdown.c	2008-11-16 19:07:13.000000000 +0100
@@ -993,7 +993,7 @@
 
 static int execute_all(struct interface_defn_t *ifd, const char *opt)
 {
-	int i;
+	int i, fd;
 	char *buf;
 	for (i = 0; i < ifd->n_options; i++) {
 		if (strcmp(ifd->option[i].name, opt) == 0) {
@@ -1002,10 +1002,17 @@
 			}
 		}
 	}
-
-	buf = xasprintf("run-parts /etc/network/if-%s.d", opt);
-	/* heh, we don't bother free'ing it */
-	return doit(buf);
+	buf = xasprintf("/etc/network/if-%s.d", opt);
+	if ((fd = open(buf, O_RDONLY)) >= 0)
+	{
+		close(fd);
+		buf = xasprintf("run-parts /etc/network/if-%s.d", opt);
+		if (doit(buf) != 1)
+		{
+			return 0;
+		}
+	}
+	return 1;
 }
 
 static int check(char *str)
diff -Naur busybox-1.13.0/scripts/trylink busybox-1.13.0/scripts/trylink
--- busybox-1.13.0/scripts/trylink	2008-10-30 08:41:25.000000000 +0100
+++ busybox-1.13.0/scripts/trylink	2008-11-16 19:08:07.000000000 +0100
@@ -93,9 +93,9 @@
 GC_SECTIONS=`(
 . ./.config
 if test x"$CONFIG_STATIC" = x"y"; then
-    check_libc_is_glibc "" "-Wl,--gc-sections"
+    check_libc_is_glibc ""
 else
-    echo "-Wl,--gc-sections"
+    echo ""
 fi
 )`
 
